- name: configure backend server
  hosts: backend
  become: yes
  tasks:
  - name: disable current nodejs
    ansible.builtin.command: dnf module disable nodejs -y

  - name: enable nodejs 20
    ansible.builtin.command: dnf module enable nodejs:20 -y

  - name: install nodejs
    ansible.builtin.package:
      name: "{{ item }}"
      state: present
    loop:
    - nodejs
    - mysql
  - name: install python libs
    ansible.builtin.pip:
      name: "{{ item }}"
      executable: pip3.9
    loop:
    - cryptography
    - PyMySQL 
  - name: creating expense user
    ansible.builtin.user:
      name: expense
  - name: creating app directory
    ansible.builtin.file:
      path: /app
      state: directory
  - name: downloadidng code
    ansible.builtin.get_url: 
      url: https://expense-builds.s3.us-east-1.amazonaws.com/expense-backend-v2.zip
      dest: /tmp/backend.zip

  - name: unzipping the code
    ansible.builtin.unarchive:
      src: /tmp/backend.zip
      dest: /app
      remote_src: true

  - name: install npm
    community.general.npm: 
      path: /app
      state: present

  - name: coping backend.service file
    ansible.builtin.copy:
      src: backend.service
      dest: /etc/systemd/system/backend.service

  - name: import mysql data
    community.mysql.mysql_db:
      state: import
      name: all
      login_user: root
      login_password: ExpenseApp@1
      login_host: mysql.santhoshdatti.online
      target: /app/schema/backend.sql

  - name: daemon relood
    ansible.builtin.systemd_service:
      enabled: true
      state: restarted
      daemon_reload: true
      name: backend
